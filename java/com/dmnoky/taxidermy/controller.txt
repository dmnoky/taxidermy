Контроллер обеспечивает «связь» между пользователем и системой. Контролирует и направляет данные от пользователя к системе и наоборот. Использует модель и представление для реализации необходимого действия.
1. AdminController – отрабатывает на запросы по адресу /admin/panel, имеет 1 метод, который возвращает admin/panel.jsp, где пользователю с правами админа (ROLE_ADMIN), предоставляется возможность изменять и читать любые данные, описанные выше в пакете model.
2. AnimalController – отрабатывает на запросы по адресу /animal/:
  a)	/add – позволяет добавить новый экземпляр модели Animal  пользователю с правами админа. Возвращает animal/animal_add.jsp.
  b)	/id/{id} – позволяет просмотреть экземпляр Animal по его id пользователю с любыми правами. Возвращает animal/animal_display.jsp.
  c)	/id/{article} – позволяет просмотреть экземпляр Animal по его article  пользователю с любыми правами. Возвращает animal/animal_display.jsp.
  d)	/list/{page} – позволяет просмотреть список экземпляров Animal из 10 элементов постранично с любыми правами. Возвращает animal/animal_list.jsp.
  e)	/list/sub/{subsidiary}/page/{page} – позволяет просмотреть список экземпляров Animal определенного семейства (Subsidiary) из 10 элементов постранично с любыми правами. Возвращает animal/animal_list.jsp.
  f)	/list/type/{type}/page/{page} – позволяет просмотреть список экземпляров Animal определенного типа (Type) из 10 элементов постранично с любыми правами. Возвращает animal/animal_list.jsp.
  g)	/update/{id} – позволяет обновить данные экземпляра Animal по его id пользователю с правами админа. Возвращает animal/animal_update.jsp.
  h)	/remove – позволяет удалить экземпляр Animal по его id пользователю с правами админа. Перенаправляет по адресу redirect:/admin/panel.

3. TypeController – отрабатывает на запросы по адресу /type/. Работает со схожими запросами, что и в предыдущем пункте – AnimalController, только, соответственно, с моделью Type, а не Animal.   
4. SubsidiaryController – отрабатывает на запросы по адресу /subsidiary/. Работает со схожими запросами, что и во втором пункте – AnimalController, только, соответственно, с моделью Subsidiary, а не Animal.
5. ProductController – отрабатывает на запросы по адресу /product/. Работает со схожими запросами, что и во втором пункте – AnimalController, только, соответственно, с моделью Product, а не Animal.
6. ClientController – отрабатывает на запросы по адресу /client/. Работает со схожими запросами, что и во втором пункте – AnimalController, только, соответственно, с моделью Client, а не Animal. 
7. WorkerController – отрабатывает на запросы по адресу /worker/. Работает со схожими запросами, что и во втором пункте – AnimalController, только, соответственно, с моделью Worker, а не Animal. 
8. MainController – отрабатывает на прочие запросы:
  a)	/login – позволяет авторизировать пользователя и назначить ему права. Возвращает login.jsp.
  b)	/logout – позволяет пользователю выйти из системы. Перенаправляет к пункту а – redirect:/login?logout.
  c)	/ - возвращает главную страницу – index.jsp, где в зависимости от прав пользователя, на экран выводится:
      - ROLE_ADMIN – выводит все задачи пользователей с правами ROLE_WORKER; 
      - ROLE_WORKER – выводит все задачи данного пользователя; 
      - ROLE_USER – выводит все заказы данного пользователя; 
